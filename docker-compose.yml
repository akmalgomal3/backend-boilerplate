version: "3.9"
services:
  postgres:
    container_name: postgres-project-prob
    image: postgres:latest
    ports:
    - "5432:5432"
    volumes:
    - /data/postgres:/data/postgres
    env_file:
    - docker.env
    networks:
    - postgres
    
  mongodb:
    container_name: mongodb
    image: mongo:6.0
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - /data/mongodb_data:/data/mongodb_data
    environment:
    - docker.env 

  apm-server:
    image: docker.elastic.co/apm/apm-server:7.17.3
    depends_on:
      elasticsearch:
        condition: service_healthy
      kibana:
        condition: service_healthy
    cap_add: ['CHOWN', 'DAC_OVERRIDE', 'SETGID', 'SETUID']
    cap_drop: ['ALL']
    ports:
      - 8200:8200
    command: >
      apm-server -e
        -E apm-server.rum.enabled=true
        -E setup.kibana.host=kibana:5601
        -E setup.template.settings.index.number_of_replicas=0
        -E apm-server.kibana.enabled=true
        -E apm-server.kibana.host=kibana:5601
        -E output.elasticsearch.hosts=["elasticsearch:9200"]
    healthcheck:
      interval: 10s
      retries: 12
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:8200/
 
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    environment:
      - bootstrap.memory_lock=true
      - cluster.name=docker-cluster
      - cluster.routing.allocation.disk.threshold_enabled=false
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    ulimits:
      memlock:
        hard: -1
        soft: -1
    volumes:
      - es-data:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    healthcheck:
      interval: 20s
      retries: 10
      test: curl -s http://localhost:9200/_cluster/health | grep -vq '"status":"red"'
 
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.3
    depends_on:
      elasticsearch:
        condition: service_healthy
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
    ports:
      - 5601:5601
    healthcheck:
      interval: 10s
      retries: 20
      test: curl --write-out 'HTTP %{http_code}' --fail --silent --output /dev/null http://localhost:5601/api/status
volumes:
  es-data:

networks:
  postgres:
    driver: bridge
  elastic:
    driver: bridge
  # nest-backend:
  #   container_name: boilerplate
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   ports:
  #     - "7xxx:7xxx"
  #   restart: unless-stopped
  #   environment:
  #     VITE_CRYPTO_SECRET_KEY: "xxxxx"  
  #     VITE_CRYPTO_IV_KEY: "xxxxx"
  #     TOKEN_EXP: "12h"                              
  #     TOKEN_SECRET: "xxxxx"                
  #     DB_HOST: "xxxxx"
  #     DB_PORT: "xxxxx"
  #     DB_USERNAME: "xxxxx"
  #     DB_NAME: "xxxxx"
  #     DB_PASSWORD: "xxxxx"
  #     APP_PORT: "xxxxx"
  #     MONGODB_URL: "xxxxx"
  #     MONGODB_DBNAME: "xxxxx"
